#pragma once
#ifndef _DATA_PROCESSING_H_
#define _DATA_PROCESSING_H_

#define FILTER_LENGTH 51  // Example length, adjust as needed
//double fir_coefficients[117] = {
//         0.000000000000000008,
//        -0.000000000000000010,
//        -0.000000000008613790,
//        -0.000000000307895541,
//        -0.000000002132651724,
//        -0.000000007553824243,
//        -0.000000016938276671,
//        -0.000000025380250830,
//        -0.000000023426302108,
//        -0.000000005807519207,
//        0.000000017590114797,
//        0.000000022963557544,
//        -0.000000005710770755,
//        -0.000000049167002338,
//        -0.000000052514791223,
//        0.000000029655446176,
//        0.000000172656003391,
//        0.000000272899118874,
//        0.000000230455273658,
//        0.000000070407902425,
//        -0.000000023965885458,
//        0.000000149580193617,
//        0.000000580396516004,
//        0.000000948804625759,
//        0.000000849815417850,
//        0.000000246492317132,
//        -0.000000251374145643,
//        0.000000249624054846,
//        0.000001774163029313,
//        0.000001902718876582,
//        -0.000004032263539140,
//        0.000014801961183948,
//        0.000012947388888072,
//        -0.000197250142727958,
//        -0.000701867769249823,
//        -0.001193844962413906,
//        -0.001158424656994665,
//        -0.000621944876714104,
//        -0.000666342492380998,
//        -0.002690836139410751,
//        -0.006615861485188978,
//        -0.009949523188414147,
//        -0.009637520217605475,
//        -0.005866507442850112,
//        -0.003803551357312558,
//        -0.009784488323214657,
//        -0.023912274426761811,
//        -0.036635410442335065,
//        -0.035519157151293224,
//        -0.018746295013495291,
//        -0.002284959037935996,
//        -0.009610912057634634,
//        -0.048283783422300913,
//        -0.093656821556688183,
//        -0.099211329390539671,
//        -0.031713967156537716,
//        0.095342998354334546,
//        0.220649798528040536,
//        0.272878609613148471,
//        0.220649798528039037,
//        0.095342998354334768,
//        -0.031713967156537654,
//        -0.099211329390539463,
//        -0.093656821556687725,
//        -0.048283783422300733,
//        -0.009610912057634388,
//        -0.002284959037935942,
//        -0.018746295013495284,
//        -0.035519157151293224,
//        -0.036635410442335141,
//        -0.023912274426761804,
//        -0.009784488323214689,
//        -0.003803551357312552,
//        -0.005866507442850079,
//        -0.009637520217605446,
//        -0.009949523188414107,
//        -0.006615861485188996,
//        -0.002690836139410759,
//        -0.000666342492380996,
//        -0.000621944876714109,
//        -0.001158424656994662,
//        -0.001193844962413902,
//        -0.000701867769249812,
//        -0.000197250142727948,
//        0.000012947388888068,
//        0.000014801961183941,
//        -0.000004032263539135,
//        0.000001902718876585,
//        0.000001774163029312,
//        0.000000249624054857,
//        -0.000000251374145619,
//        0.000000246492317150,
//        0.000000849815417859,
//        0.000000948804625749,
//        0.000000580396516006,
//        0.000000149580193626,
//        -0.000000023965885452,
//        0.000000070407902427,
//        0.000000230455273677,
//        0.000000272899118881,
//        0.000000172656003390,
//        0.000000029655446163,
//        -0.000000052514791229,
//        -0.000000049167002345,
//        -0.000000005710770754,
//        0.000000022963557542,
//        0.000000017590114809,
//        -0.000000005807519199,
//        -0.000000023426302112,
//        -0.000000025380250843,
//        -0.000000016938276679,
//        -0.000000007553824244,
//        -0.000000002132651723,
//        -0.000000000307895534,
//        -0.000000000008613775,
//        0.000000000000000005,
//        0.000000000000000019,
//};

double calculateMean(double array[], int length);
double calculateStdDev(double array[], int length, double mean);
void calculateZScores(double array[], int length, double zScores[]);
int find_peaks(double data[], int size, int peaks[]);
void smooth_data(double data[], int size, double smoothed_data[]);

#endif